# all websites we will use their data
weather_websites:
  SoDa: https://soda.dit.uop.gr/
  WeatherUnderground: https://www.wunderground.com/
  Meteo: https://meteo.gr/

check_station_availability: True # checks if station is offline or online
get_weather_basic_data: True # if True, include items from 'weather_live_basic_data' in the scraping process
get_weather_measurements: True # if True, include items from 'weather_live_conditions_measurements' in the scraping process

# defines the basic fields collected for each weather record
weather_live_basic_data:
  - source
  - city
  - timecrawl
  - day
  - hour

# defines the measurements fields collected for each weather record from all websites
# comment to remove or uncomment to add measurement
weather_live_conditions_measurements:
  - Temperature
  - Humidity
  - Wind
  - Wind Speed
  - Wind Direction
  - Barometer
  - Today's Rain
  - Rain Rate
  - Storm Total
  - Heat Index

# farms information
# each station must include 'url', 'source', and 'city' fields
farms:
  farm1: # Tegea, Arkadia, Greece

    # station 1 for farm 1
    - url: 'https://stations.sodasense.uop.gr/'
      city: TODO
      source: soda

    # station 2 for farm 1
    - url: 'https://stations.sodasense.uop.gr/'
      city: TODO
      source: soda
      
    # station 3 for farm 1
    - url: 'https://stations.sodasense.uop.gr/'
      city: TODO
      source: soda
    
    # station 4 for farm 1
    - url: 'https://www.wunderground.com/weather/IMAGOU3'
      city: TODO
      source: wunderground

  farm2: # Paparis, Arkadia, Greece
    
    # station 1 for farm 2
    - url: 'https://www.wunderground.com/weather/IASSEA3'
      city: TODO
      source: soda

    # station 2 for farm 2
    - url: 'https://penteli.meteo.gr/stations/voutsaras/'
      city: Voutsaras (Arkadia)
      source: soda

  farm3: # Agricultural University, Athens, Greece

    # station 1 for farm 3
    - url: https://penteli.meteo.gr/stations/athens/
      city: Gazi (Athens)
      source: meteo

    # station 2 for farm 3
    - url: https://www.wunderground.com/weather/IATHEN112
      city: TODO
      source: wunderground

    # station 3 for farm 3
    - url: https://penteli.meteo.gr/stations/peristeri/
      city: Peristeri (Athens)
      source: meteo

    # station 4 for farm 3
    - url: https://www.wunderground.com/weather/IAEGAL9
      city: TODO
      source: wunderground
  
  farm4: # TODO: new farm 

API_KEYS:
  soda_api: SODA_API_KEY

# all paths used for extracting specific information from the meteo website (extracted from the website HTML)
meteo_live_data:
  offline_station_check: //div[contains(@class, "offline boxshadow")]/span/text()
  get_day_and_hour: .//div[contains(@class, "headline gradient")]/span[2]/text()
  get_data_table: //div[@class="col_sub dist boxshadow realtime"]//div[@class="line"] # table = data from meteo
  get_data_table_label: .//div[@class="lleft"]/span[1]/text()
  get_data_table_value: .//div[@class="lright"]/span/text()

# all paths used for extracting specific information from the weather-underground website (extracted from the website HTML)
weather-underground_live_data_paths:
  station_availability: //div[@class="dashboard__title"]/div/span[1]/text()
  get_last_updated: //div[@class="dashboard__title"]/div/span[2]/text()
  get_day_and_hour: .//p[@class="timestamp"]/span[1]/strong/text()

  temperature:
    value: './/span[contains(@class,"test-true wu-unit wu-unit-temperature is-degree-visible")]/span/text()'
    unit: './/span[contains(@class,"test-true wu-unit wu-unit-temperature is-degree-visible")]/span[@class="wu-label"]/span[2]/text()'
  
  wind_direction: './/div[contains(@class,"wind-compass")]/@style'
  
  wind_speed:
    value: './/header[@class="wind-speed"]/strong/text()'
    unit: './/span[@class="test-false wu-unit wu-unit-speed"]/span[@class="wu-label"]/span[2]/text()'
  
  humidity:
    value: './/span[contains(@class,"test-false wu-unit wu-unit-humidity")]/span/text()'
    unit: './/span[@class="test-false wu-unit wu-unit-humidity"]/span[@class="wu-label"]/span[2]/text()'

  weather_conditions: './/div[contains(@class,"small-4 columns") and contains(text(), "Clouds")]/following-sibling::div/span/text()'
  pressure:
    value: './/span[contains(@class,"test-false wu-unit wu-unit-pressure")]/span/text()'
    unit: './/span[contains(@class,"test-false wu-unit wu-unit-pressure")]/span[@class="wu-label"]/span[2]/text()'

  rainfall:
    value: './/span[contains(@class,"test-false wu-unit wu-unit-rain")]/span/text()'
    unit: './/span[contains(@class,"test-false wu-unit wu-unit-rain")]/span[@class="wu-label"]/span[2]/text()'
