# all websites we will use their data
weather_websites:
  - source: SoDa
    url: https://soda.dit.uop.gr/
    code: soda
    spider_name: soda_live_data

  - source: WeatherUnderground
    url: https://www.wunderground.com/
    code: wu
    spider_name: wu_live_data

  - source: Meteo
    url: https://meteo.gr/
    code: meteo
    spider_name: meteo_live_data

  - source: OpenMeteo
    url: https://open-meteo.com/
    code: openmeteo
    spider_name: open-meteo_live_data

  - source: OpenWeatherMap
    url: https://open-meteo.com/
    code: openweathermap
    spider_name: open-weather-map_live_data

check_station_availability: True # checks if station is offline or online
get_weather_basic_data: True # if True, include items from 'weather_live_basic_data' in the scraping process
get_weather_measurements: True # if True, include items from 'weather_live_conditions_measurements' in the scraping process

# defines the basic fields collected for each weather record
weather_live_basic_data:
  - farm
  - source
  - timedata
  - crawled
  - city
  - nomos
  # - station_number

# defines the measurements fields collected for each weather record from all websites
# comment to remove or uncomment to add measurement
weather_live_conditions_measurements:
  temperature: [temperature, temperature_2m, temp]
  humidity: [humidity, relative_humidity_2m]
  wind: [wind, wind_speed, speed, wind_speed_10m]
  direction: [wind, wind_direction, direction, wind_direction_10m, deg]
  yetos: [yetos, rainfall, today's rain, today's_rain, rain]
  barometer: [pressure, barometer, surface_pressure]

soda_api_paths:
  weather_sensor_id_path: [17]

  temperature: [Temperatura aria, temperature, 9]
  direction: [Direzione vento, direction, 3]
  wind: [Velocità vento, wind, 8]
  barometer: [Pressione atmosferica, barometer, pressure, 2]
  humidity: [Umidità aria, humidity, 10]
  yetos: [Pioggia, yetos, 11]

results_units:
  temperature: C # C = celsius
  humidity: '%' # 
  wind: km/h #
  direction: null
  yetos: mm #
  barometer: hpa #

# farms information
# each station must include 'url', 'source', and 'city' fields
farms:
  farm1: # Tegea, Arkadia, Greece

    - url: SODA_FARM1_STATION1
      city: Λίμνη Τάκα
      nomos: Αρκαδίας
      code: soda
      source: SoDa
      station_number: 1

    - url: SODA_FARM1_STATION2
      city: Τεγέα
      nomos: Αρκαδίας
      code: soda
      source: SoDa
      station_number: 2
    
    - url: https://www.wunderground.com/weather/IMAGOU3
      city: Μαγούλα
      nomos: Αρκαδίας
      code: wu
      source: WeatherUnderground
      station_number: 4

  farm2: # Paparis, Arkadia, Greece
    
    - url: https://www.wunderground.com/weather/IASSEA3
      city: Πάπαρης
      nomos: Αρκαδίας
      code: wu
      source: WeatherUnderground
      station_number: 1

    - url: https://penteli.meteo.gr/stations/voutsaras/
      city: Βουτσαράς
      nomos: Αρκαδίας
      code: meteo
      source: Meteo
      station_number: 2

  farm3: # Agricultural University, Athens, Greece

    - url: https://penteli.meteo.gr/stations/athens/
      city: Γκάζι
      nomos: Αττικής
      code: meteo
      source: Meteo
      station_number: 1

    - url: https://www.wunderground.com/weather/IATHEN112
      city: Πετράλωνα
      nomos: Αττικής
      code: wu
      source: WeatherUnderground
      station_number: 2

    - url: https://penteli.meteo.gr/stations/peristeri/
      city: Περιστέρι
      nomos: Αττικής
      code: meteo
      source: Meteo
      station_number: 3

    - url: https://www.wunderground.com/weather/IAEGAL9
      city: Αιγάλεω
      nomos: Αττικής
      code: wu
      source: WeatherUnderground
      station_number: 4
  
  farm4:

    - url: https://www.wunderground.com/weather/gr/poullitsa/IPOULL5
      city: Πουλίτσα
      nomos: Κορινθίας
      code: wu
      source: WeatherUnderground
      station_number: 1

    - url: https://penteli.meteo.gr/stations/assos/
      city: Άσσος
      nomos: Κορινθίας
      code: meteo
      source: Meteo
      station_number: 2

    - url: https://www.wunderground.com/weather/gr/moulki/IMOULK1
      city: Μούλκι
      nomos: Κορινθίας
      code: wu
      source: WeatherUnderground
      station_number: 3


# all paths used for extracting specific information from the meteo website (extracted from the website HTML)
meteo_live_data_paths:
  station_availability: //div[contains(@class, "offline boxshadow")]/span/text()
  get_day_and_hour: .//div[contains(@class, "headline gradient")]/span[2]/text()
  get_data_table: //div[@class="col_sub dist boxshadow realtime"]//div[@class="line"] # table = data from meteo
  get_data_table_label: .//div[@class="lleft"]/span[1]/text()
  get_data_table_value: .//div[@class="lright"]/span/text()

# all paths used for extracting specific information from the weather-underground website (extracted from the website HTML)
weather-underground_live_data_paths:
  station_availability: //div[@class="dashboard__title"]/div/span[1]/text()
  get_last_updated: //div[@class="dashboard__title"]/div/span[2]/text()
  get_day_and_hour: .//p[@class="timestamp"]/span[1]/strong/text()

  temperature:
    value: './/span[contains(@class,"test-true wu-unit wu-unit-temperature is-degree-visible")]/span/text()'
    unit: './/span[contains(@class,"test-true wu-unit wu-unit-temperature is-degree-visible")]/span[@class="wu-label"]/span[2]/text()'
  
  direction:
    value: './/div[contains(@class,"wind-compass")]/@style'
    unit: null

  wind:
    value: './/header[@class="wind-speed"]/strong/text()'
    unit: './/span[@class="test-false wu-unit wu-unit-speed"]/span[@class="wu-label"]/span[2]/text()'
  
  humidity:
    value: './/span[contains(@class,"test-false wu-unit wu-unit-humidity")]/span/text()'
    unit: './/span[@class="test-false wu-unit wu-unit-humidity"]/span[@class="wu-label"]/span[2]/text()'

  barometer:
    value: './/span[contains(@class,"test-false wu-unit wu-unit-pressure")]/span/text()'
    unit: './/span[contains(@class,"test-false wu-unit wu-unit-pressure")]/span[@class="wu-label"]/span[2]/text()'

  yetos:
    value: './/span[contains(@class,"test-false wu-unit wu-unit-rain")]/span/text()'
    unit: './/span[contains(@class,"test-false wu-unit wu-unit-rain")]/span[@class="wu-label"]/span[2]/text()'

preprocessing:
  meteo:
    staging: data/meteo/staging.csv
    cleaned: data/meteo/cleaned
    failed: data/meteo/failed
    
  wu:
    staging: data/wu/staging.csv
    cleaned: data/wu/cleaned
    failed: data/wu/failed

  soda:
    staging: data/soda/staging.csv
    cleaned: data/soda/cleaned
    failed: data/soda/failed

  open-meteo:
    staging: data/open-meteo/staging.csv
    cleaned: data/open-meteo/cleaned
    failed: data/open-meteo/failed

  open-weather-map:
    staging: data/open-weather-map/staging.csv
    cleaned: data/open-weather-map/cleaned
    failed: data/open-weather-map/failed

commands: # .../PROVATO$
  meteo: scrapy crawl meteo_live_data -o data/meteo/staging.csv
  wu: scrapy crawl wu_live_data -o data/wu/staging.csv
  soda: python3 apis/soda_live_data.py
  openmeteo: python3 apis/open-meteo_live_data.py
  openweathermap: python3 apis/open-weather-map_live_data.py
